---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: grafana
          image: grafana/grafana:9.2.5
          env:
            - name: GF_SERVER_DOMAIN
              value: monitoring.threshold.network
            - name: GF_SERVER_ROOT_URL
              value: "https://%(domain)s/grafana/"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
            - name: GF_FEATURE_TOGGLES_PUBLICDASHBOARDS
              value: "true"
            - name: GF_AUTH_GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: grafana-auth-google
                  key: client_id
            - name: GF_AUTH_GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: grafana-auth-google
                  key: client_secret
          ports:
            - name: grafana
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /api/health
              port: grafana
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 2
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: grafana
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          volumeMounts:
            - name: grafana-grafana-ini
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: grafana-config-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-config-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards-keep
              mountPath: /var/lib/grafana/dashboards/keep
          securityContext:
            readOnlyRootFilesystem: true
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-dashboards-keep
          configMap:
            name: grafana-dashboards-keep
        - name: grafana-config-datasources
          configMap:
            name: grafana-config
            items:
              - key: datasources.yaml
                path: datasources.yaml
        - name: grafana-config-dashboards
          configMap:
            name: grafana-config
            items:
              - key: dashboards.yaml
                path: dashboards.yaml
        - name: grafana-grafana-ini
          configMap:
            name: grafana-config
            items:
              - key: grafana.ini
                path: grafana.ini
