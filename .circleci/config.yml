version: 2.1

executors:
  docker-git:
    docker:
      - image: docker:18.06.0-ce-git
  docker-gcloud-cli:
    docker:
      - image: google/cloud-sdk:slim
  docker-node:
    docker:
      - image: circleci/node:11
  docker-thesis-buildpack:
    docker:
      - image: thesisco/docker-buildpack:bionic
  docker-xgo:
    docker:
      - image: karalabe/xgo-latest

orbs:
  gcp-gcr: circleci/gcp-gcr@0.0.4
  gcp-cli: circleci/gcp-cli@1.8.2

jobs:
  generate_docs_solidity:
    executor: docker-node
    steps:
      - checkout
      - run:
          name: Generate solidity docs
          command: |
            cd solidity && npm install
            node_modules/.bin/truffle compile
            mkdir -p output
            node scripts/generate-api-docs.js > output/index.adoc
            mkdir -p /tmp/docs
            cp -r output /tmp/docs/solidity
      - persist_to_workspace:
          root: /tmp/docs
          paths:
            - solidity/*
  build_client_and_test_go:
    executor: docker-git
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Create test results directory
          command: |
            mkdir -p /tmp/test-results/keep-core-go
      - run:
          name: Run Docker build
          command: |
            docker build --build-arg GITHUB_TOKEN=$GITHUB_TOKEN --target gobuild -t go-build-env .
            docker build --build-arg GITHUB_TOKEN=$GITHUB_TOKEN -t $GCR_REGISTRY_URL/$GOOGLE_PROJECT_ID/keep-client .
      - run:
          name: Run Go tests
          command: |
            docker run -v /tmp/test-results:/mnt/test-results -w /go/src/github.com/keep-network/keep-core go-build-env gotestsum --junitfile /mnt/test-results/unit-tests.xml
            docker run -v /tmp/test-results:/mnt/test-results -w /go/src/github.com/keep-network/keep-core go-build-env cat /mnt/test-results/unit-tests.xml > /tmp/test-results/keep-core-go/unit-tests.xml
      - store_test_results:
          path: /tmp/test-results
      - run:
          name: Save keep-client image
          command: |
            mkdir -p /tmp/keep-client/docker-images
            docker save -o /tmp/keep-client/docker-images/keep-client.tar $GCR_REGISTRY_URL/$GOOGLE_PROJECT_ID/keep-client
      - persist_to_workspace:
          root: /tmp/keep-client
          paths:
            - docker-images

  cross_compile_client:
    executor: docker-xgo
    steps:
      - attach_workspace:
          at: /tmp/keep-client
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Copy source code
          command: |
            docker load -i /tmp/keep-client/docker-images/keep-client.tar
            container_id=$(docker create keep-client)
            docker cp $container_id:/go/src/github.com/keep-network/keep-core ~/project
            docker rm $container_id
      - run:
          name: Compile binaries
          working_directory: ~/project
          command: xgo -v -dest /tmp/keep-client/bin -out keep-client --targets=linux/amd64 .
      # xgo doesn't respect `-dest` flag to point a destination directory so we
      # need to move the output from a place the command saved them
      - run:
          name: Move binaries
          command: |
            mkdir -p /tmp/keep-client/bin
            mv /build/keep-client* /tmp/keep-client/bin
      - persist_to_workspace:
          root: /tmp/keep-client
          paths:
            - bin

  publish_client_binaries:
    executor: gcp-cli/default
    steps:
      - attach_workspace:
          at: /tmp/keep-client
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE_A
          # This param doesn't actually set anything, leaving here as a reminder to check when they fix it.
          gcloud-service-key: GCLOUD_SERVICE_KEY
      - run:
          name: Upload client binaries
          command: |
            cd /tmp/keep-client/bin
            gsutil -m cp * gs://${CLIENT_BIN_BUCKET}/keep-core/

  build_initcontainer:
    executor: docker-git
    steps:
      - attach_workspace:
          at: /tmp/keep-client
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Run Docker build
          command: |
            cp /tmp/keep-client/contracts/* infrastructure/kube/templates/keep-client/initcontainer/provision-keep-client/
            cd infrastructure/kube/templates/keep-client/initcontainer/provision-keep-client/
            docker build \
              -t $GCR_REGISTRY_URL/$GOOGLE_PROJECT_ID/initcontainer-provision-keep-client .
      - run:
          name: Save initcontainer-provision-keep-client image
          command: |
            docker save -o /tmp/keep-client/docker-images/initcontainer-provision-keep-client.tar $GCR_REGISTRY_URL/$GOOGLE_PROJECT_ID/initcontainer-provision-keep-client
      - persist_to_workspace:
          root: /tmp/keep-client
          paths:
            - docker-images
  migrate_contracts:
    executor: docker-thesis-buildpack
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Set Gcloud Auth
          command: |
            echo $GCLOUD_SERVICE_KEY_JUMPHOST_SSH > ~/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
      - run:
          name: Migrate Contracts
          command: |
            export BUILD_TAG=$CIRCLE_SHA1
            export TRUFFLE_NETWORK=$TRUFFLE_NETWORK
            export CONTRACT_OWNER_ETH_ACCOUNT_PRIVATE_KEY=$CONTRACT_OWNER_ETH_ACCOUNT_PRIVATE_KEY
            mkdir -p /tmp/keep-client/contracts
            solidity/scripts/circleci-migrate-contracts.sh
      - persist_to_workspace:
          root: /tmp/keep-client
          paths:
            - contracts
  publish_keep_client:
    executor: gcp-gcr/default
    steps:
      - attach_workspace:
          at: /tmp/keep-client
      - run:
          name: Load Docker images
          command: |
            docker load -i /tmp/keep-client/docker-images/keep-client.tar
            docker load -i /tmp/keep-client/docker-images/initcontainer-provision-keep-client.tar
      - gcp-gcr/gcr-auth:
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE_A
          # This param doesn't actually set anything, leaving here as a reminder to check when they fix it.
          gcloud-service-key: GCLOUD_SERVICE_KEY
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: $GCR_REGISTRY_URL
          image: initcontainer-provision-keep-client
          tag: latest
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: $GCR_REGISTRY_URL
          image: keep-client
          tag: latest
  publish_contract_data:
    executor: gcp-cli/default
    steps:
      - attach_workspace:
          at: /tmp/keep-client
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE_A
          # This param doesn't actually set anything, leaving here as a reminder to check when they fix it.
          gcloud-service-key: GCLOUD_SERVICE_KEY
      - run:
          name: Upload contract data
          command: |
            cd /tmp/keep-client/contracts
            gsutil -m cp * gs://${CONTRACT_DATA_BUCKET}/keep-core

  publish_npm_package:
    executor: docker-node
    steps:
      - attach_workspace:
          at: /tmp/keep-client
      - checkout
      - run:
          name: Bump and publish npm package
          working_directory: ~/project/solidity
          command: |
            set -x
            mkdir -p artifacts
            cp -r /tmp/keep-client/contracts/* artifacts/
            name=$(jq --raw-output .name package.json)
            version=$(jq --raw-output .version package.json)
            preid=$(echo $version | sed -e s/^.*-\\\([^.]*\\\).*$/\\1/)

            # Find the latest published package version matching this preid.
            # Note that in jq, we wrap the result in an array and then flatten;
            # this is because npm show json contains a single string if there
            # is only one matching version, or an array if there are multiple,
            # and we want to look at an array always.
            latest_version=$(npm show -json "$name@^$version" version | jq --raw-output "[.] | flatten | .[-1]")
            latest_version=${latest_version:-$version}
            if [ -z $latest_version ]; then
              echo "Latest version calculation failed. Resolved info:"
              echo "$name@$version ; preid $preid"
              exit 1
            fi

            # Update package.json with the latest published package version matching this
            # preid to prepare for bumping.
            echo $(jq -M ".version=\"${latest_version}\"" package.json) > package.json

            # Bump without doing any git work. Versioning is a build-time action for us.
            # Consider including commit id? Would be +<commit id>.
            npm version prerelease --preid=$preid --no-git-tag-version

            # Fix resolved dependency versions.
            npm update

            # Publish to npm.
            echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
            npm publish --access=public

  trigger_downstream_builds:
    executor: docker-node
    steps:
      - run:
          name: "Rebuild downstream same-branch build(s)"
          command: |
            # CIRCLE_BRANCH || CIRCLE_TAG?
            # curl CIRCLE_API_BUILD/keep-tecdsa?branch=${CIRCLE_BRANCH}
            echo "Eventually trigger downstream for $CIRCLE_BRANCH"

  build_token_dashboard_dapp:
    executor: docker-node
    steps:
      - attach_workspace:
          at: /tmp/keep-client
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Resolve latest contracts
          working_directory: ~/project/solidity/dashboard
          command: |
            npm upgrade @keep-network/keep-core
      - run:
          name: Run Docker build
          working_directory: ~/project/solidity/dashboard
          command: |
            docker build --tag keep-dapp-token-dashboard .
      - run:
          name: Save keep-dapp-token-dashboard image
          working_directory: ~/project/solidity/dashboard
          command: |
            mkdir -p /tmp/keep-dapp-token-dashboard/docker-images/
            docker save -o /tmp/keep-dapp-token-dashboard/docker-images/keep-dapp-token-dashboard.tar keep-dapp-token-dashboard
      - persist_to_workspace:
          root: /tmp/keep-dapp-token-dashboard
          paths:
            - docker-images
  publish_token_dashboard_dapp:
    executor: gcp-gcr/default
    steps:
      - attach_workspace:
          at: /tmp/keep-dapp-token-dashboard
      - run:
          name: Load keep-dapp-token-dashboard image
          command: |
            docker load -i /tmp/keep-dapp-token-dashboard/docker-images/keep-dapp-token-dashboard.tar
      - run:
          name: Tag Docker image
          command: |
            docker tag keep-dapp-token-dashboard $GCR_REGISTRY_URL/$GOOGLE_PROJECT_ID/keep-dapp-token-dashboard
      - gcp-gcr/gcr-auth:
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE_A
          # This param doesn't actually set anything, leaving here as a reminder to check when they fix it.
          gcloud-service-key: GCLOUD_SERVICE_KEY
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: $GCR_REGISTRY_URL
          image: keep-dapp-token-dashboard
          tag: latest

  generate_docs_tex:
    docker:
      - image: keepnetwork/texlive:3
    steps:
      - checkout
      - run:
          name: Generate TeX Document Files
          command: |
            cd docs
            make clean
            mkdir -p /tmp/docs/img
            make docs
            cp relay-states.pdf /tmp/docs
            cp -r img/generated /tmp/docs/img/generated
      - persist_to_workspace:
          root: /tmp/docs
          paths:
            - ./*.pdf
            - img/generated/*.png
  generate_docs_asciidoctor:
    docker:
      - image: asciidoctor/docker-asciidoctor
    steps:
      - checkout
      - attach_workspace:
          at: ./docs
      - run:
          name: Generate Asciidoctor PDF/HTML Files
          command: |
            set -ex
            shopt -s extglob globstar nullglob
            cd docs
            asciidoctor --failure-level=ERROR *.adoc **/*.adoc
            for a in $(ls *.html **/*.html); do set +x; mkdir -p /tmp/docs/$(dirname $a); cp $a /tmp/docs/$(dirname $a)/; done
            set -x
            asciidoctor-pdf *.adoc **/*.adoc
            for a in $(ls *.pdf **/*.pdf); do set +x; mkdir -p /tmp/docs/$(dirname $a); cp $a /tmp/docs/$(dirname $a)/; done
      - persist_to_workspace:
          root: /tmp/docs
          paths:
            - ./
  upload_docs:
    docker:
      - image: google/cloud-sdk:slim
    steps:
      - attach_workspace:
          at: /tmp/docs
      - run:
          name: Upload Document Files to docs.keep.network
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ~/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
            gcloud config set project cfc-production
            cd /tmp/docs
            export DIR=$(test $CIRCLE_BRANCH != master && echo $CIRCLE_BRANCH/)
            gsutil -m cp -r * gs://docs.keep.network/$DIR

workflows:
  version: 2
  build-and-test:
    jobs:
      - build_client_and_test_go:
          filters:
            branches:
              ignore: master
          context: keep-dev
      - build_token_dashboard_dapp:
          filters:
            branches:
              ignore: master
      - cross_compile_client:
          requires:
            - build_client_and_test_go
      - publish_client_binaries:
          context: keep-dev
          requires:
            - cross_compile_client
  build-test-migrate-publish-keep-dev:
    jobs:
      - build_client_and_test_go:
          filters:
            branches:
              only: master
          context: keep-dev
      - build_initcontainer:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - migrate_contracts
            - build_client_and_test_go
      - migrate_contracts:
          filters:
            branches:
              only: master
          context: keep-dev
      - publish_npm_package:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - migrate_contracts
            - build_client_and_test_go
      - publish_keep_client:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - build_client_and_test_go
            - build_initcontainer
            - migrate_contracts
      - trigger_downstream_builds:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - publish_npm_package
      - publish_contract_data:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - build_client_and_test_go
            - migrate_contracts
      # When building the token dashboard for a master merge, wait for npm
      # package publish
      - build_token_dashboard_dapp:
          filters:
            branches:
              only: master
          requires:
            - publish_npm_package
      - publish_token_dashboard_dapp:
          filters:
            branches:
              only: master
          context: keep-dev
          requires:
            - build_token_dashboard_dapp
  build-test-migrate-publish-keep-test:
    jobs:
      - keep_test_approval:
          type: approval
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
      - build_client_and_test_go:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - keep_test_approval
      - build_initcontainer:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - migrate_contracts
            - build_client_and_test_go
      - migrate_contracts:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - build_client_and_test_go
      - publish_keep_client:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - build_client_and_test_go
            - build_initcontainer
            - migrate_contracts
      - publish_contract_data:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - build_client_and_test_go
            - migrate_contracts
      - publish_npm_package:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - migrate_contracts
      - trigger_downstream_builds:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - publish_npm_package
      - build_token_dashboard_dapp:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - publish_npm_package
      - publish_token_dashboard_dapp:
          context: keep-test
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /releases\/.*/
          requires:
            - build_token_dashboard_dapp
  docs:
    jobs:
      - generate_docs_tex
      - generate_docs_solidity
      - generate_docs_asciidoctor:
          requires:
            - generate_docs_solidity
      - upload_docs:
          requires:
            - generate_docs_tex
            - generate_docs_asciidoctor
