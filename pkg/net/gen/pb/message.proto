syntax = "proto3";

option go_package = "pb";
package net;

// Envelope contains a marshalled payload, as well as a signature over the
// payload. It also contains the Identities of the sender and receiver.
// Optionally, an Envelope may contain an encrypted Envelope field for messages
// which need to be secret (in which case the payload will be empty).
message Envelope {
  // The PublicKey of the sender
  bytes sender = 1;

  // The PublicKey of the receiver
  bytes receiver = 2;

  // A marshaled Protocol Message
  bytes payload = 3;

  // Signature of the message
  bytes signature = 4;

  // A marshalled, encrypted message; if this exists, payload is empty
  EncryptedEnvelope encrypted_envelope = 5;

  // Channel is the group name as well as the pubsub channel
  // Channel names are Keccak(StakingPubKey1 || ... || StakingPubKeyN) of
  // all valid group members.
  bytes channel = 6;

  // Proof that the peer that sent this message knows the channel's name.
  bytes channel_MAC = 7;

  // Type of the message as registered by the protocol
  bytes type = 8;
}

// EncryptedEnvelope is a marshalled, encrypted message.
message EncryptedEnvelope {
  bytes payload = 1;
  bytes signature = 4;
}

message Identity {
  bytes pub_key = 1;
}
