// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: pkg/tecdsa/signing/gen/pb/message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EphemeralPublicKeyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID            uint32            `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	EphemeralPublicKeys map[uint32][]byte `protobuf:"bytes,2,rep,name=ephemeralPublicKeys,proto3" json:"ephemeralPublicKeys,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SessionID           string            `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *EphemeralPublicKeyMessage) Reset() {
	*x = EphemeralPublicKeyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralPublicKeyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralPublicKeyMessage) ProtoMessage() {}

func (x *EphemeralPublicKeyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralPublicKeyMessage.ProtoReflect.Descriptor instead.
func (*EphemeralPublicKeyMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{0}
}

func (x *EphemeralPublicKeyMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *EphemeralPublicKeyMessage) GetEphemeralPublicKeys() map[uint32][]byte {
	if x != nil {
		return x.EphemeralPublicKeys
	}
	return nil
}

func (x *EphemeralPublicKeyMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type TSSRoundOneCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID            uint32                                                     `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID           string                                                     `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundOneMessages map[string]*TSSRoundOneCompositeMessage_TSSRoundOneMessage `protobuf:"bytes,3,rep,name=tssRoundOneMessages,proto3" json:"tssRoundOneMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundOneCompositeMessage) Reset() {
	*x = TSSRoundOneCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundOneCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundOneCompositeMessage) ProtoMessage() {}

func (x *TSSRoundOneCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundOneCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundOneCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{1}
}

func (x *TSSRoundOneCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundOneCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundOneCompositeMessage) GetTssRoundOneMessages() map[string]*TSSRoundOneCompositeMessage_TSSRoundOneMessage {
	if x != nil {
		return x.TssRoundOneMessages
	}
	return nil
}

type TSSRoundTwoCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID            uint32                                                     `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID           string                                                     `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundTwoMessages map[string]*TSSRoundTwoCompositeMessage_TSSRoundTwoMessage `protobuf:"bytes,3,rep,name=tssRoundTwoMessages,proto3" json:"tssRoundTwoMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundTwoCompositeMessage) Reset() {
	*x = TSSRoundTwoCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundTwoCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundTwoCompositeMessage) ProtoMessage() {}

func (x *TSSRoundTwoCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundTwoCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundTwoCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{2}
}

func (x *TSSRoundTwoCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundTwoCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundTwoCompositeMessage) GetTssRoundTwoMessages() map[string]*TSSRoundTwoCompositeMessage_TSSRoundTwoMessage {
	if x != nil {
		return x.TssRoundTwoMessages
	}
	return nil
}

type TSSRoundThreeCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID              uint32                                                         `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID             string                                                         `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundThreeMessages map[string]*TSSRoundThreeCompositeMessage_TSSRoundThreeMessage `protobuf:"bytes,3,rep,name=tssRoundThreeMessages,proto3" json:"tssRoundThreeMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundThreeCompositeMessage) Reset() {
	*x = TSSRoundThreeCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundThreeCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundThreeCompositeMessage) ProtoMessage() {}

func (x *TSSRoundThreeCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundThreeCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundThreeCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{3}
}

func (x *TSSRoundThreeCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundThreeCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundThreeCompositeMessage) GetTssRoundThreeMessages() map[string]*TSSRoundThreeCompositeMessage_TSSRoundThreeMessage {
	if x != nil {
		return x.TssRoundThreeMessages
	}
	return nil
}

type TSSRoundFourCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID             uint32                                                       `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID            string                                                       `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundFourMessages map[string]*TSSRoundFourCompositeMessage_TSSRoundFourMessage `protobuf:"bytes,3,rep,name=tssRoundFourMessages,proto3" json:"tssRoundFourMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundFourCompositeMessage) Reset() {
	*x = TSSRoundFourCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundFourCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundFourCompositeMessage) ProtoMessage() {}

func (x *TSSRoundFourCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundFourCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundFourCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{4}
}

func (x *TSSRoundFourCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundFourCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundFourCompositeMessage) GetTssRoundFourMessages() map[string]*TSSRoundFourCompositeMessage_TSSRoundFourMessage {
	if x != nil {
		return x.TssRoundFourMessages
	}
	return nil
}

type TSSRoundFiveCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID             uint32                                                       `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID            string                                                       `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundFiveMessages map[string]*TSSRoundFiveCompositeMessage_TSSRoundFiveMessage `protobuf:"bytes,3,rep,name=tssRoundFiveMessages,proto3" json:"tssRoundFiveMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundFiveCompositeMessage) Reset() {
	*x = TSSRoundFiveCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundFiveCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundFiveCompositeMessage) ProtoMessage() {}

func (x *TSSRoundFiveCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundFiveCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundFiveCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{5}
}

func (x *TSSRoundFiveCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundFiveCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundFiveCompositeMessage) GetTssRoundFiveMessages() map[string]*TSSRoundFiveCompositeMessage_TSSRoundFiveMessage {
	if x != nil {
		return x.TssRoundFiveMessages
	}
	return nil
}

type TSSRoundSixCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID            uint32                                                     `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID           string                                                     `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundSixMessages map[string]*TSSRoundSixCompositeMessage_TSSRoundSixMessage `protobuf:"bytes,3,rep,name=tssRoundSixMessages,proto3" json:"tssRoundSixMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundSixCompositeMessage) Reset() {
	*x = TSSRoundSixCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundSixCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundSixCompositeMessage) ProtoMessage() {}

func (x *TSSRoundSixCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundSixCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundSixCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{6}
}

func (x *TSSRoundSixCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundSixCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundSixCompositeMessage) GetTssRoundSixMessages() map[string]*TSSRoundSixCompositeMessage_TSSRoundSixMessage {
	if x != nil {
		return x.TssRoundSixMessages
	}
	return nil
}

type TSSRoundSevenCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID              uint32                                                         `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID             string                                                         `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundSevenMessages map[string]*TSSRoundSevenCompositeMessage_TSSRoundSevenMessage `protobuf:"bytes,3,rep,name=tssRoundSevenMessages,proto3" json:"tssRoundSevenMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundSevenCompositeMessage) Reset() {
	*x = TSSRoundSevenCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundSevenCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundSevenCompositeMessage) ProtoMessage() {}

func (x *TSSRoundSevenCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundSevenCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundSevenCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{7}
}

func (x *TSSRoundSevenCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundSevenCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundSevenCompositeMessage) GetTssRoundSevenMessages() map[string]*TSSRoundSevenCompositeMessage_TSSRoundSevenMessage {
	if x != nil {
		return x.TssRoundSevenMessages
	}
	return nil
}

type TSSRoundEightCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID              uint32                                                         `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID             string                                                         `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundEightMessages map[string]*TSSRoundEightCompositeMessage_TSSRoundEightMessage `protobuf:"bytes,3,rep,name=tssRoundEightMessages,proto3" json:"tssRoundEightMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundEightCompositeMessage) Reset() {
	*x = TSSRoundEightCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundEightCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundEightCompositeMessage) ProtoMessage() {}

func (x *TSSRoundEightCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundEightCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundEightCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{8}
}

func (x *TSSRoundEightCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundEightCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundEightCompositeMessage) GetTssRoundEightMessages() map[string]*TSSRoundEightCompositeMessage_TSSRoundEightMessage {
	if x != nil {
		return x.TssRoundEightMessages
	}
	return nil
}

type TSSRoundNineCompositeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID             uint32                                                       `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SessionID            string                                                       `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TssRoundNineMessages map[string]*TSSRoundNineCompositeMessage_TSSRoundNineMessage `protobuf:"bytes,3,rep,name=tssRoundNineMessages,proto3" json:"tssRoundNineMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundNineCompositeMessage) Reset() {
	*x = TSSRoundNineCompositeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundNineCompositeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundNineCompositeMessage) ProtoMessage() {}

func (x *TSSRoundNineCompositeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundNineCompositeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundNineCompositeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{9}
}

func (x *TSSRoundNineCompositeMessage) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *TSSRoundNineCompositeMessage) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *TSSRoundNineCompositeMessage) GetTssRoundNineMessages() map[string]*TSSRoundNineCompositeMessage_TSSRoundNineMessage {
	if x != nil {
		return x.TssRoundNineMessages
	}
	return nil
}

type TSSRoundOneCompositeMessage_TSSRoundOneMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte            `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
	PeersPayload     map[uint32][]byte `protobuf:"bytes,2,rep,name=peersPayload,proto3" json:"peersPayload,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundOneCompositeMessage_TSSRoundOneMessage) Reset() {
	*x = TSSRoundOneCompositeMessage_TSSRoundOneMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundOneCompositeMessage_TSSRoundOneMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundOneCompositeMessage_TSSRoundOneMessage) ProtoMessage() {}

func (x *TSSRoundOneCompositeMessage_TSSRoundOneMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundOneCompositeMessage_TSSRoundOneMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundOneCompositeMessage_TSSRoundOneMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TSSRoundOneCompositeMessage_TSSRoundOneMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

func (x *TSSRoundOneCompositeMessage_TSSRoundOneMessage) GetPeersPayload() map[uint32][]byte {
	if x != nil {
		return x.PeersPayload
	}
	return nil
}

type TSSRoundTwoCompositeMessage_TSSRoundTwoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeersPayload map[uint32][]byte `protobuf:"bytes,1,rep,name=peersPayload,proto3" json:"peersPayload,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TSSRoundTwoCompositeMessage_TSSRoundTwoMessage) Reset() {
	*x = TSSRoundTwoCompositeMessage_TSSRoundTwoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundTwoCompositeMessage_TSSRoundTwoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundTwoCompositeMessage_TSSRoundTwoMessage) ProtoMessage() {}

func (x *TSSRoundTwoCompositeMessage_TSSRoundTwoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundTwoCompositeMessage_TSSRoundTwoMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundTwoCompositeMessage_TSSRoundTwoMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TSSRoundTwoCompositeMessage_TSSRoundTwoMessage) GetPeersPayload() map[uint32][]byte {
	if x != nil {
		return x.PeersPayload
	}
	return nil
}

type TSSRoundThreeCompositeMessage_TSSRoundThreeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
}

func (x *TSSRoundThreeCompositeMessage_TSSRoundThreeMessage) Reset() {
	*x = TSSRoundThreeCompositeMessage_TSSRoundThreeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundThreeCompositeMessage_TSSRoundThreeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundThreeCompositeMessage_TSSRoundThreeMessage) ProtoMessage() {}

func (x *TSSRoundThreeCompositeMessage_TSSRoundThreeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundThreeCompositeMessage_TSSRoundThreeMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundThreeCompositeMessage_TSSRoundThreeMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TSSRoundThreeCompositeMessage_TSSRoundThreeMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

type TSSRoundFourCompositeMessage_TSSRoundFourMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
}

func (x *TSSRoundFourCompositeMessage_TSSRoundFourMessage) Reset() {
	*x = TSSRoundFourCompositeMessage_TSSRoundFourMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundFourCompositeMessage_TSSRoundFourMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundFourCompositeMessage_TSSRoundFourMessage) ProtoMessage() {}

func (x *TSSRoundFourCompositeMessage_TSSRoundFourMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundFourCompositeMessage_TSSRoundFourMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundFourCompositeMessage_TSSRoundFourMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{4, 0}
}

func (x *TSSRoundFourCompositeMessage_TSSRoundFourMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

type TSSRoundFiveCompositeMessage_TSSRoundFiveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
}

func (x *TSSRoundFiveCompositeMessage_TSSRoundFiveMessage) Reset() {
	*x = TSSRoundFiveCompositeMessage_TSSRoundFiveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundFiveCompositeMessage_TSSRoundFiveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundFiveCompositeMessage_TSSRoundFiveMessage) ProtoMessage() {}

func (x *TSSRoundFiveCompositeMessage_TSSRoundFiveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundFiveCompositeMessage_TSSRoundFiveMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundFiveCompositeMessage_TSSRoundFiveMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TSSRoundFiveCompositeMessage_TSSRoundFiveMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

type TSSRoundSixCompositeMessage_TSSRoundSixMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
}

func (x *TSSRoundSixCompositeMessage_TSSRoundSixMessage) Reset() {
	*x = TSSRoundSixCompositeMessage_TSSRoundSixMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundSixCompositeMessage_TSSRoundSixMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundSixCompositeMessage_TSSRoundSixMessage) ProtoMessage() {}

func (x *TSSRoundSixCompositeMessage_TSSRoundSixMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundSixCompositeMessage_TSSRoundSixMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundSixCompositeMessage_TSSRoundSixMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TSSRoundSixCompositeMessage_TSSRoundSixMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

type TSSRoundSevenCompositeMessage_TSSRoundSevenMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
}

func (x *TSSRoundSevenCompositeMessage_TSSRoundSevenMessage) Reset() {
	*x = TSSRoundSevenCompositeMessage_TSSRoundSevenMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundSevenCompositeMessage_TSSRoundSevenMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundSevenCompositeMessage_TSSRoundSevenMessage) ProtoMessage() {}

func (x *TSSRoundSevenCompositeMessage_TSSRoundSevenMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundSevenCompositeMessage_TSSRoundSevenMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundSevenCompositeMessage_TSSRoundSevenMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{7, 0}
}

func (x *TSSRoundSevenCompositeMessage_TSSRoundSevenMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

type TSSRoundEightCompositeMessage_TSSRoundEightMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
}

func (x *TSSRoundEightCompositeMessage_TSSRoundEightMessage) Reset() {
	*x = TSSRoundEightCompositeMessage_TSSRoundEightMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundEightCompositeMessage_TSSRoundEightMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundEightCompositeMessage_TSSRoundEightMessage) ProtoMessage() {}

func (x *TSSRoundEightCompositeMessage_TSSRoundEightMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundEightCompositeMessage_TSSRoundEightMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundEightCompositeMessage_TSSRoundEightMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{8, 0}
}

func (x *TSSRoundEightCompositeMessage_TSSRoundEightMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

type TSSRoundNineCompositeMessage_TSSRoundNineMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastPayload []byte `protobuf:"bytes,1,opt,name=broadcastPayload,proto3" json:"broadcastPayload,omitempty"`
}

func (x *TSSRoundNineCompositeMessage_TSSRoundNineMessage) Reset() {
	*x = TSSRoundNineCompositeMessage_TSSRoundNineMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSSRoundNineCompositeMessage_TSSRoundNineMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSSRoundNineCompositeMessage_TSSRoundNineMessage) ProtoMessage() {}

func (x *TSSRoundNineCompositeMessage_TSSRoundNineMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSSRoundNineCompositeMessage_TSSRoundNineMessage.ProtoReflect.Descriptor instead.
func (*TSSRoundNineCompositeMessage_TSSRoundNineMessage) Descriptor() ([]byte, []int) {
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TSSRoundNineCompositeMessage_TSSRoundNineMessage) GetBroadcastPayload() []byte {
	if x != nil {
		return x.BroadcastPayload
	}
	return nil
}

var File_pkg_tecdsa_signing_gen_pb_message_proto protoreflect.FileDescriptor

var file_pkg_tecdsa_signing_gen_pb_message_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x65, 0x63, 0x64, 0x73, 0x61, 0x2f, 0x73, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x22, 0x8c, 0x02, 0x0a, 0x19, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x6d, 0x0a, 0x13,
	0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70,
	0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a, 0x46, 0x0a, 0x18, 0x45, 0x70, 0x68,
	0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xbc, 0x04, 0x0a, 0x1b, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x6f, 0x0a, 0x13, 0x74,
	0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0xf0, 0x01, 0x0a,
	0x12, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x6d, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3f,
	0x0a, 0x11, 0x50, 0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x7f, 0x0a, 0x18, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x90, 0x04, 0x0a, 0x1b, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77, 0x6f,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x6f, 0x0a, 0x13, 0x74, 0x73,
	0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x73,
	0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x77, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0xc4, 0x01, 0x0a, 0x12,
	0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x6d, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x1a, 0x3f, 0x0a, 0x11, 0x50, 0x65, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x7f, 0x0a, 0x18, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x54, 0x77, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x77,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x9e, 0x03, 0x0a, 0x1d, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x77, 0x0a, 0x15, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x54, 0x68, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x15, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x54, 0x53, 0x53, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x85, 0x01, 0x0a,
	0x1a, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x51, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x68, 0x72,
	0x65, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x03, 0x0a, 0x1c, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x46, 0x6f, 0x75, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x73, 0x0a, 0x14, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x46, 0x6f, 0x75, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x6f, 0x75,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14,
	0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x46, 0x6f, 0x75, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x82, 0x01, 0x0a, 0x19, 0x54, 0x73, 0x73, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53,
	0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x6f, 0x75, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x03, 0x0a,
	0x1c, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x73, 0x0a, 0x14, 0x74, 0x73, 0x73, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x73, 0x73,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x46, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x13,
	0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x82, 0x01, 0x0a, 0x19, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x76, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x4f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x46, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69,
	0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x03, 0x0a, 0x1b, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x69, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x6f,
	0x0a, 0x13, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x78, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69,
	0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x78, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x74, 0x73, 0x73, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a,
	0x40, 0x0a, 0x12, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x78, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x1a, 0x7f, 0x0a, 0x18, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x78,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x69, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x78,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9e, 0x03, 0x0a, 0x1d, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x65, 0x76, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x77,
	0x0a, 0x15, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x65, 0x76, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65,
	0x76, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x15, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x54, 0x53, 0x53, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x85, 0x01, 0x0a, 0x1a,
	0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x51, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65,
	0x76, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x76, 0x65,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x9e, 0x03, 0x0a, 0x1d, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x45, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x77, 0x0a, 0x15, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x69, 0x67, 0x68, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x15, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x69, 0x67, 0x68, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x54, 0x53, 0x53, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x85, 0x01, 0x0a,
	0x1a, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x51, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x69, 0x67,
	0x68, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x03, 0x0a, 0x1c, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x4e, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x73, 0x0a, 0x14, 0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x69, 0x6e, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x4e, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x69, 0x6e,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14,
	0x74, 0x73, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x4e, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x82, 0x01, 0x0a, 0x19, 0x54, 0x73, 0x73, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x54, 0x53, 0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x53,
	0x53, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescOnce sync.Once
	file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescData = file_pkg_tecdsa_signing_gen_pb_message_proto_rawDesc
)

func file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescGZIP() []byte {
	file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescOnce.Do(func() {
		file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescData)
	})
	return file_pkg_tecdsa_signing_gen_pb_message_proto_rawDescData
}

var file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_pkg_tecdsa_signing_gen_pb_message_proto_goTypes = []interface{}{
	(*EphemeralPublicKeyMessage)(nil),                      // 0: signing.EphemeralPublicKeyMessage
	(*TSSRoundOneCompositeMessage)(nil),                    // 1: signing.TSSRoundOneCompositeMessage
	(*TSSRoundTwoCompositeMessage)(nil),                    // 2: signing.TSSRoundTwoCompositeMessage
	(*TSSRoundThreeCompositeMessage)(nil),                  // 3: signing.TSSRoundThreeCompositeMessage
	(*TSSRoundFourCompositeMessage)(nil),                   // 4: signing.TSSRoundFourCompositeMessage
	(*TSSRoundFiveCompositeMessage)(nil),                   // 5: signing.TSSRoundFiveCompositeMessage
	(*TSSRoundSixCompositeMessage)(nil),                    // 6: signing.TSSRoundSixCompositeMessage
	(*TSSRoundSevenCompositeMessage)(nil),                  // 7: signing.TSSRoundSevenCompositeMessage
	(*TSSRoundEightCompositeMessage)(nil),                  // 8: signing.TSSRoundEightCompositeMessage
	(*TSSRoundNineCompositeMessage)(nil),                   // 9: signing.TSSRoundNineCompositeMessage
	nil,                                                    // 10: signing.EphemeralPublicKeyMessage.EphemeralPublicKeysEntry
	(*TSSRoundOneCompositeMessage_TSSRoundOneMessage)(nil), // 11: signing.TSSRoundOneCompositeMessage.TSSRoundOneMessage
	nil, // 12: signing.TSSRoundOneCompositeMessage.TssRoundOneMessagesEntry
	nil, // 13: signing.TSSRoundOneCompositeMessage.TSSRoundOneMessage.PeersPayloadEntry
	(*TSSRoundTwoCompositeMessage_TSSRoundTwoMessage)(nil), // 14: signing.TSSRoundTwoCompositeMessage.TSSRoundTwoMessage
	nil, // 15: signing.TSSRoundTwoCompositeMessage.TssRoundTwoMessagesEntry
	nil, // 16: signing.TSSRoundTwoCompositeMessage.TSSRoundTwoMessage.PeersPayloadEntry
	(*TSSRoundThreeCompositeMessage_TSSRoundThreeMessage)(nil), // 17: signing.TSSRoundThreeCompositeMessage.TSSRoundThreeMessage
	nil, // 18: signing.TSSRoundThreeCompositeMessage.TssRoundThreeMessagesEntry
	(*TSSRoundFourCompositeMessage_TSSRoundFourMessage)(nil), // 19: signing.TSSRoundFourCompositeMessage.TSSRoundFourMessage
	nil, // 20: signing.TSSRoundFourCompositeMessage.TssRoundFourMessagesEntry
	(*TSSRoundFiveCompositeMessage_TSSRoundFiveMessage)(nil), // 21: signing.TSSRoundFiveCompositeMessage.TSSRoundFiveMessage
	nil, // 22: signing.TSSRoundFiveCompositeMessage.TssRoundFiveMessagesEntry
	(*TSSRoundSixCompositeMessage_TSSRoundSixMessage)(nil), // 23: signing.TSSRoundSixCompositeMessage.TSSRoundSixMessage
	nil, // 24: signing.TSSRoundSixCompositeMessage.TssRoundSixMessagesEntry
	(*TSSRoundSevenCompositeMessage_TSSRoundSevenMessage)(nil), // 25: signing.TSSRoundSevenCompositeMessage.TSSRoundSevenMessage
	nil, // 26: signing.TSSRoundSevenCompositeMessage.TssRoundSevenMessagesEntry
	(*TSSRoundEightCompositeMessage_TSSRoundEightMessage)(nil), // 27: signing.TSSRoundEightCompositeMessage.TSSRoundEightMessage
	nil, // 28: signing.TSSRoundEightCompositeMessage.TssRoundEightMessagesEntry
	(*TSSRoundNineCompositeMessage_TSSRoundNineMessage)(nil), // 29: signing.TSSRoundNineCompositeMessage.TSSRoundNineMessage
	nil, // 30: signing.TSSRoundNineCompositeMessage.TssRoundNineMessagesEntry
}
var file_pkg_tecdsa_signing_gen_pb_message_proto_depIdxs = []int32{
	10, // 0: signing.EphemeralPublicKeyMessage.ephemeralPublicKeys:type_name -> signing.EphemeralPublicKeyMessage.EphemeralPublicKeysEntry
	12, // 1: signing.TSSRoundOneCompositeMessage.tssRoundOneMessages:type_name -> signing.TSSRoundOneCompositeMessage.TssRoundOneMessagesEntry
	15, // 2: signing.TSSRoundTwoCompositeMessage.tssRoundTwoMessages:type_name -> signing.TSSRoundTwoCompositeMessage.TssRoundTwoMessagesEntry
	18, // 3: signing.TSSRoundThreeCompositeMessage.tssRoundThreeMessages:type_name -> signing.TSSRoundThreeCompositeMessage.TssRoundThreeMessagesEntry
	20, // 4: signing.TSSRoundFourCompositeMessage.tssRoundFourMessages:type_name -> signing.TSSRoundFourCompositeMessage.TssRoundFourMessagesEntry
	22, // 5: signing.TSSRoundFiveCompositeMessage.tssRoundFiveMessages:type_name -> signing.TSSRoundFiveCompositeMessage.TssRoundFiveMessagesEntry
	24, // 6: signing.TSSRoundSixCompositeMessage.tssRoundSixMessages:type_name -> signing.TSSRoundSixCompositeMessage.TssRoundSixMessagesEntry
	26, // 7: signing.TSSRoundSevenCompositeMessage.tssRoundSevenMessages:type_name -> signing.TSSRoundSevenCompositeMessage.TssRoundSevenMessagesEntry
	28, // 8: signing.TSSRoundEightCompositeMessage.tssRoundEightMessages:type_name -> signing.TSSRoundEightCompositeMessage.TssRoundEightMessagesEntry
	30, // 9: signing.TSSRoundNineCompositeMessage.tssRoundNineMessages:type_name -> signing.TSSRoundNineCompositeMessage.TssRoundNineMessagesEntry
	13, // 10: signing.TSSRoundOneCompositeMessage.TSSRoundOneMessage.peersPayload:type_name -> signing.TSSRoundOneCompositeMessage.TSSRoundOneMessage.PeersPayloadEntry
	11, // 11: signing.TSSRoundOneCompositeMessage.TssRoundOneMessagesEntry.value:type_name -> signing.TSSRoundOneCompositeMessage.TSSRoundOneMessage
	16, // 12: signing.TSSRoundTwoCompositeMessage.TSSRoundTwoMessage.peersPayload:type_name -> signing.TSSRoundTwoCompositeMessage.TSSRoundTwoMessage.PeersPayloadEntry
	14, // 13: signing.TSSRoundTwoCompositeMessage.TssRoundTwoMessagesEntry.value:type_name -> signing.TSSRoundTwoCompositeMessage.TSSRoundTwoMessage
	17, // 14: signing.TSSRoundThreeCompositeMessage.TssRoundThreeMessagesEntry.value:type_name -> signing.TSSRoundThreeCompositeMessage.TSSRoundThreeMessage
	19, // 15: signing.TSSRoundFourCompositeMessage.TssRoundFourMessagesEntry.value:type_name -> signing.TSSRoundFourCompositeMessage.TSSRoundFourMessage
	21, // 16: signing.TSSRoundFiveCompositeMessage.TssRoundFiveMessagesEntry.value:type_name -> signing.TSSRoundFiveCompositeMessage.TSSRoundFiveMessage
	23, // 17: signing.TSSRoundSixCompositeMessage.TssRoundSixMessagesEntry.value:type_name -> signing.TSSRoundSixCompositeMessage.TSSRoundSixMessage
	25, // 18: signing.TSSRoundSevenCompositeMessage.TssRoundSevenMessagesEntry.value:type_name -> signing.TSSRoundSevenCompositeMessage.TSSRoundSevenMessage
	27, // 19: signing.TSSRoundEightCompositeMessage.TssRoundEightMessagesEntry.value:type_name -> signing.TSSRoundEightCompositeMessage.TSSRoundEightMessage
	29, // 20: signing.TSSRoundNineCompositeMessage.TssRoundNineMessagesEntry.value:type_name -> signing.TSSRoundNineCompositeMessage.TSSRoundNineMessage
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pkg_tecdsa_signing_gen_pb_message_proto_init() }
func file_pkg_tecdsa_signing_gen_pb_message_proto_init() {
	if File_pkg_tecdsa_signing_gen_pb_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralPublicKeyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundOneCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundTwoCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundThreeCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundFourCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundFiveCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundSixCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundSevenCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundEightCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundNineCompositeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundOneCompositeMessage_TSSRoundOneMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundTwoCompositeMessage_TSSRoundTwoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundThreeCompositeMessage_TSSRoundThreeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundFourCompositeMessage_TSSRoundFourMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundFiveCompositeMessage_TSSRoundFiveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundSixCompositeMessage_TSSRoundSixMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundSevenCompositeMessage_TSSRoundSevenMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundEightCompositeMessage_TSSRoundEightMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSSRoundNineCompositeMessage_TSSRoundNineMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_tecdsa_signing_gen_pb_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_tecdsa_signing_gen_pb_message_proto_goTypes,
		DependencyIndexes: file_pkg_tecdsa_signing_gen_pb_message_proto_depIdxs,
		MessageInfos:      file_pkg_tecdsa_signing_gen_pb_message_proto_msgTypes,
	}.Build()
	File_pkg_tecdsa_signing_gen_pb_message_proto = out.File
	file_pkg_tecdsa_signing_gen_pb_message_proto_rawDesc = nil
	file_pkg_tecdsa_signing_gen_pb_message_proto_goTypes = nil
	file_pkg_tecdsa_signing_gen_pb_message_proto_depIdxs = nil
}
