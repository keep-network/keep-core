// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.7.1
// source: pkg/beacon/gjkr/gen/pb/message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EphemeralPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID            uint32            `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	EphemeralPublicKeys map[uint32][]byte `protobuf:"bytes,2,rep,name=ephemeralPublicKeys,proto3" json:"ephemeralPublicKeys,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SessionID           string            `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *EphemeralPublicKey) Reset() {
	*x = EphemeralPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralPublicKey) ProtoMessage() {}

func (x *EphemeralPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralPublicKey.ProtoReflect.Descriptor instead.
func (*EphemeralPublicKey) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{0}
}

func (x *EphemeralPublicKey) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *EphemeralPublicKey) GetEphemeralPublicKeys() map[uint32][]byte {
	if x != nil {
		return x.EphemeralPublicKeys
	}
	return nil
}

func (x *EphemeralPublicKey) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type MemberCommitments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID    uint32   `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	Commitments [][]byte `protobuf:"bytes,2,rep,name=commitments,proto3" json:"commitments,omitempty"`
	SessionID   string   `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *MemberCommitments) Reset() {
	*x = MemberCommitments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberCommitments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberCommitments) ProtoMessage() {}

func (x *MemberCommitments) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberCommitments.ProtoReflect.Descriptor instead.
func (*MemberCommitments) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{1}
}

func (x *MemberCommitments) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *MemberCommitments) GetCommitments() [][]byte {
	if x != nil {
		return x.Commitments
	}
	return nil
}

func (x *MemberCommitments) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type PeerShares struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID  uint32                        `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	Shares    map[uint32]*PeerShares_Shares `protobuf:"bytes,2,rep,name=shares,proto3" json:"shares,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SessionID string                        `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *PeerShares) Reset() {
	*x = PeerShares{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerShares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerShares) ProtoMessage() {}

func (x *PeerShares) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerShares.ProtoReflect.Descriptor instead.
func (*PeerShares) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{2}
}

func (x *PeerShares) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *PeerShares) GetShares() map[uint32]*PeerShares_Shares {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *PeerShares) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type SecretSharesAccusations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID           uint32            `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	AccusedMembersKeys map[uint32][]byte `protobuf:"bytes,2,rep,name=accusedMembersKeys,proto3" json:"accusedMembersKeys,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SessionID          string            `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SecretSharesAccusations) Reset() {
	*x = SecretSharesAccusations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretSharesAccusations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretSharesAccusations) ProtoMessage() {}

func (x *SecretSharesAccusations) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretSharesAccusations.ProtoReflect.Descriptor instead.
func (*SecretSharesAccusations) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{3}
}

func (x *SecretSharesAccusations) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *SecretSharesAccusations) GetAccusedMembersKeys() map[uint32][]byte {
	if x != nil {
		return x.AccusedMembersKeys
	}
	return nil
}

func (x *SecretSharesAccusations) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type MemberPublicKeySharePoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID             uint32   `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	PublicKeySharePoints [][]byte `protobuf:"bytes,2,rep,name=publicKeySharePoints,proto3" json:"publicKeySharePoints,omitempty"`
	SessionID            string   `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *MemberPublicKeySharePoints) Reset() {
	*x = MemberPublicKeySharePoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPublicKeySharePoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPublicKeySharePoints) ProtoMessage() {}

func (x *MemberPublicKeySharePoints) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPublicKeySharePoints.ProtoReflect.Descriptor instead.
func (*MemberPublicKeySharePoints) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{4}
}

func (x *MemberPublicKeySharePoints) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *MemberPublicKeySharePoints) GetPublicKeySharePoints() [][]byte {
	if x != nil {
		return x.PublicKeySharePoints
	}
	return nil
}

func (x *MemberPublicKeySharePoints) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type PointsAccusations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID           uint32            `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	AccusedMembersKeys map[uint32][]byte `protobuf:"bytes,2,rep,name=accusedMembersKeys,proto3" json:"accusedMembersKeys,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SessionID          string            `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *PointsAccusations) Reset() {
	*x = PointsAccusations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsAccusations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsAccusations) ProtoMessage() {}

func (x *PointsAccusations) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsAccusations.ProtoReflect.Descriptor instead.
func (*PointsAccusations) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{5}
}

func (x *PointsAccusations) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *PointsAccusations) GetAccusedMembersKeys() map[uint32][]byte {
	if x != nil {
		return x.AccusedMembersKeys
	}
	return nil
}

func (x *PointsAccusations) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type MisbehavedEphemeralKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID    uint32            `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	PrivateKeys map[uint32][]byte `protobuf:"bytes,2,rep,name=privateKeys,proto3" json:"privateKeys,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SessionID   string            `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *MisbehavedEphemeralKeys) Reset() {
	*x = MisbehavedEphemeralKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MisbehavedEphemeralKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MisbehavedEphemeralKeys) ProtoMessage() {}

func (x *MisbehavedEphemeralKeys) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MisbehavedEphemeralKeys.ProtoReflect.Descriptor instead.
func (*MisbehavedEphemeralKeys) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{6}
}

func (x *MisbehavedEphemeralKeys) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *MisbehavedEphemeralKeys) GetPrivateKeys() map[uint32][]byte {
	if x != nil {
		return x.PrivateKeys
	}
	return nil
}

func (x *MisbehavedEphemeralKeys) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type PeerShares_Shares struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedShareS []byte `protobuf:"bytes,1,opt,name=encryptedShareS,proto3" json:"encryptedShareS,omitempty"`
	EncryptedShareT []byte `protobuf:"bytes,2,opt,name=encryptedShareT,proto3" json:"encryptedShareT,omitempty"`
}

func (x *PeerShares_Shares) Reset() {
	*x = PeerShares_Shares{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerShares_Shares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerShares_Shares) ProtoMessage() {}

func (x *PeerShares_Shares) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerShares_Shares.ProtoReflect.Descriptor instead.
func (*PeerShares_Shares) Descriptor() ([]byte, []int) {
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PeerShares_Shares) GetEncryptedShareS() []byte {
	if x != nil {
		return x.EncryptedShareS
	}
	return nil
}

func (x *PeerShares_Shares) GetEncryptedShareT() []byte {
	if x != nil {
		return x.EncryptedShareT
	}
	return nil
}

var File_pkg_beacon_gjkr_gen_pb_message_proto protoreflect.FileDescriptor

var file_pkg_beacon_gjkr_gen_pb_message_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x67, 0x6a, 0x6b,
	0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x6a, 0x6b, 0x72, 0x22, 0xfb, 0x01, 0x0a,
	0x12, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x63, 0x0a, 0x13, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x6a, 0x6b, 0x72, 0x2e, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x2e, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x13, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x1a, 0x46, 0x0a, 0x18, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f, 0x0a, 0x11, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xae, 0x02, 0x0a, 0x0a,
	0x50, 0x65, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6a, 0x6b, 0x72, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a, 0x5c, 0x0a, 0x06, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x12, 0x28,
	0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x1a, 0x52, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6a, 0x6b, 0x72, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81, 0x02, 0x0a,
	0x17, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x41, 0x63, 0x63,
	0x75, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x65, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x67, 0x6a, 0x6b, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x41, 0x63, 0x63, 0x75, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4b, 0x65,
	0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a, 0x45, 0x0a, 0x17, 0x41, 0x63, 0x63,
	0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xf5, 0x01,
	0x0a, 0x11, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x75, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x5f, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6a,
	0x6b, 0x72, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41, 0x63, 0x63, 0x75, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x61, 0x63,
	0x63, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a, 0x45,
	0x0a, 0x17, 0x41, 0x63, 0x63, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x01, 0x0a, 0x17, 0x4d, 0x69, 0x73, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x65, 0x64, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x50, 0x0a,
	0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6a, 0x6b, 0x72, 0x2e, 0x4d, 0x69, 0x73, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x65, 0x64, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a, 0x3e, 0x0a,
	0x10, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescOnce sync.Once
	file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescData = file_pkg_beacon_gjkr_gen_pb_message_proto_rawDesc
)

func file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescGZIP() []byte {
	file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescOnce.Do(func() {
		file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescData)
	})
	return file_pkg_beacon_gjkr_gen_pb_message_proto_rawDescData
}

var file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pkg_beacon_gjkr_gen_pb_message_proto_goTypes = []interface{}{
	(*EphemeralPublicKey)(nil),         // 0: gjkr.EphemeralPublicKey
	(*MemberCommitments)(nil),          // 1: gjkr.MemberCommitments
	(*PeerShares)(nil),                 // 2: gjkr.PeerShares
	(*SecretSharesAccusations)(nil),    // 3: gjkr.SecretSharesAccusations
	(*MemberPublicKeySharePoints)(nil), // 4: gjkr.MemberPublicKeySharePoints
	(*PointsAccusations)(nil),          // 5: gjkr.PointsAccusations
	(*MisbehavedEphemeralKeys)(nil),    // 6: gjkr.MisbehavedEphemeralKeys
	nil,                                // 7: gjkr.EphemeralPublicKey.EphemeralPublicKeysEntry
	(*PeerShares_Shares)(nil),          // 8: gjkr.PeerShares.Shares
	nil,                                // 9: gjkr.PeerShares.SharesEntry
	nil,                                // 10: gjkr.SecretSharesAccusations.AccusedMembersKeysEntry
	nil,                                // 11: gjkr.PointsAccusations.AccusedMembersKeysEntry
	nil,                                // 12: gjkr.MisbehavedEphemeralKeys.PrivateKeysEntry
}
var file_pkg_beacon_gjkr_gen_pb_message_proto_depIdxs = []int32{
	7,  // 0: gjkr.EphemeralPublicKey.ephemeralPublicKeys:type_name -> gjkr.EphemeralPublicKey.EphemeralPublicKeysEntry
	9,  // 1: gjkr.PeerShares.shares:type_name -> gjkr.PeerShares.SharesEntry
	10, // 2: gjkr.SecretSharesAccusations.accusedMembersKeys:type_name -> gjkr.SecretSharesAccusations.AccusedMembersKeysEntry
	11, // 3: gjkr.PointsAccusations.accusedMembersKeys:type_name -> gjkr.PointsAccusations.AccusedMembersKeysEntry
	12, // 4: gjkr.MisbehavedEphemeralKeys.privateKeys:type_name -> gjkr.MisbehavedEphemeralKeys.PrivateKeysEntry
	8,  // 5: gjkr.PeerShares.SharesEntry.value:type_name -> gjkr.PeerShares.Shares
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_beacon_gjkr_gen_pb_message_proto_init() }
func file_pkg_beacon_gjkr_gen_pb_message_proto_init() {
	if File_pkg_beacon_gjkr_gen_pb_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberCommitments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerShares); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretSharesAccusations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPublicKeySharePoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsAccusations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MisbehavedEphemeralKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerShares_Shares); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_beacon_gjkr_gen_pb_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_beacon_gjkr_gen_pb_message_proto_goTypes,
		DependencyIndexes: file_pkg_beacon_gjkr_gen_pb_message_proto_depIdxs,
		MessageInfos:      file_pkg_beacon_gjkr_gen_pb_message_proto_msgTypes,
	}.Build()
	File_pkg_beacon_gjkr_gen_pb_message_proto = out.File
	file_pkg_beacon_gjkr_gen_pb_message_proto_rawDesc = nil
	file_pkg_beacon_gjkr_gen_pb_message_proto_goTypes = nil
	file_pkg_beacon_gjkr_gen_pb_message_proto_depIdxs = nil
}
