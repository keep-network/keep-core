apiVersion: extensions/v1beta1 
kind: Deployment
metadata:
  name: {{ template "geth.fullname" . }}-bootnode-deployment
  labels:
    app: {{ template "geth.name" . }}-bootnode-deployment
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.bootnode.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "geth.name" . }}-bootnode
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "geth.name" . }}-bootnode
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: genkey
          image: {{ .Values.bootnode.image.repository }}:{{ .Values.bootnode.image.tag }}
          command: ["/bin/sh", "-c", "bootnode --genkey=/data/boot.key"]
          volumeMounts:
            - name: datadir
              mountPath: /data
      containers:
        - name: bootnode
          image: {{ .Values.bootnode.image.repository }}:{{ .Values.bootnode.image.tag }}
          command: ["/bin/sh", "-c", "bootnode --nodekey=/data/boot.key"]
          volumeMounts:
            - name: datadir
              mountPath: /data
          ports:
            - name: bootnode
              containerPort: 30301
              protocol: UDP
        - name: bootnode-broadcast
          image: {{ .Values.bootnode.image.repository }}:{{ .Values.bootnode.image.tag }}
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
{{ $.Files.Get "scripts/broadcast_bootnode_address.sh" | indent 14 }}
          volumeMounts:
            - name: datadir
              mountPath: /data
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 80
      volumes:
        - name: datadir
          emptyDir: {}
