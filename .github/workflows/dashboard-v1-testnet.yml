name: Token Dashboard / Testnet

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
     - main
    paths:
      - "solidity-v1/dashboard/**"
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for workflow execution'
        required: false
        default: 'dev'
      upstream_builds:
        description: 'Upstream builds'
        required: false
      upstream_ref:
        description: 'Git reference to checkout (e.g. branch name)'
        required: false
        default: 'main'

jobs:
  dashboard-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'

      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request'
        id: filter
        with:
          filters: |
            path-filter:
              - './solidity-v1/dashboard/**'

  dashboard-build-and-publish:
    needs: dashboard-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.dashboard-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity-v1/dashboard
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/ci/actions/load-env-variables@v1
        with:
          # TODO: Consider passing of `environment` input instead of using 
          # hardcoded value. Would require some rework in action's code or
          # in config files.
          environment: 'ropsten'

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: Cache Global NPM Cache
        uses: actions/cache@v2
        env:
          cache-name: cache-global-npm-cache
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Resolve latest contracts
        if: github.event_name != 'workflow_dispatch'
        run: |
            npm update \
              @keep-network/keep-core \
              @keep-network/keep-ecdsa \
              @keep-network/tbtc \
              @keep-network/tbtc-v2 \
              @keep-network/coverage-pools

      - name: Get upstream packages' versions
        if: github.event_name == 'workflow_dispatch'
        uses: keep-network/ci/actions/upstream-builds-query@v1
        id: upstream-builds-query
        with:
          upstream-builds: ${{ github.event.inputs.upstream_builds }}
          query: |
            keep-core-contracts-version = github.com/keep-network/keep-core/solidity-v1#version
            keep-ecdsa-contracts-version = github.com/keep-network/keep-ecdsa/solidity#version
            tbtc-contracts-version = github.com/keep-network/tbtc/solidity#version
            tbtc-v2-contracts-version = github.com/keep-network/tbtc-v2/solidity#version
            coverage-pools-version = github.com/keep-network/coverage-pools#version

      - name: Resolve latest contracts
        if: github.event_name == 'workflow_dispatch'
        run: |
            npm install --save-exact \
              @keep-network/keep-core@${{ steps.upstream-builds-query.outputs.keep-core-contracts-version }} \
              @keep-network/keep-ecdsa@${{ steps.upstream-builds-query.outputs.keep-ecdsa-contracts-version }} \
              @keep-network/tbtc@${{ steps.upstream-builds-query.outputs.tbtc-contracts-version }} \
              @keep-network/tbtc-v2@${{ steps.upstream-builds-query.outputs.tbtc-v2-contracts-version }} \
              @keep-network/coverage-pools@${{ steps.upstream-builds-query.outputs.coverage-pools-version }}

      - name: NPM build
        run: npm run build

      - name: Deploy to GCP bucket
        if: github.event_name == 'workflow_dispatch'
        uses: thesis/gcp-storage-bucket-action@v3.1.0
        with:
          service-key: ${{ secrets.KEEP_TEST_CI_UPLOAD_DAPP_JSON_KEY_BASE64 }}
          project: ${{ env.GOOGLE_PROJECT_ID }}
          bucket-name: dashboard.test.keep.network
          set-website: true
          home-page-path: index.html
          error-page-path: index.html
          build-folder: solidity-v1/dashboard/build
      
      - name: Notify CI about completion of the workflow
        if: github.event_name == 'workflow_dispatch'
        uses: keep-network/ci/actions/notify-workflow-completed@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        with:
          module: "github.com/keep-network/keep-core/dashboard"
          url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          environment: ${{ github.event.inputs.environment }}
          upstream_builds: ${{ github.event.inputs.upstream_builds }}
          upstream_ref: ${{ github.event.inputs.upstream_ref }}
          version: ${{ github.sha }}
