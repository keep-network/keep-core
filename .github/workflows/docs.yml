name: Docs

on:
  push:
    branches:
      - main
    paths:
      - "docs/**"
      - "solidity-v1/**"
      - "!solidity-v1/dashboard/**"
  pull_request:
  workflow_dispatch:

jobs:
  docs-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request' 
      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request' 
        id: filter
        with:
          filters: |
            path-filter:
              - './((docs|(solidity-v1/!dashboard))/**)'

  docs-tex:
    runs-on: ubuntu-latest
    container: keepnetwork/texlive:3
    needs: docs-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.docs-detect-changes.outputs.path-filter == 'true'
    defaults:
      run:
        working-directory: ./docs
    env:
      DOCS_DIR: ${{ github.workspace }}/tmp/docs
    steps:
      - uses: actions/checkout@v2

      # Step generates files based on Makefile config. Current config produces
      # a number of .png files, which are then used to generate 
      # relay-states.pdf. We want to publish only the resulting .pdf file.
      - name: Generate TeX document files
        run: |
          make clean
          make docs
          mkdir -p $DOCS_DIR
          mv relay-states.pdf $DOCS_DIR

      # A push event is a main merge; deploy to primary bucket.
      - if: github.event_name == 'push'
        name: Upload generated files
        uses: thesis/gcp-storage-bucket-action@v3.1.0
        with:
          service-key: ${{ secrets.DOCS_KEEP_NETWORK_UPLOADER_SERVICE_KEY_JSON }}
          project: cfc-production
          bucket-name: docs.keep.network
          bucket-path: .
          build-folder: tmp/docs

      # A pull_request event is a PR; deploy to preview bucket.
      - if: github.event_name == 'pull_request'
        name: Upload preview of generated files
        uses: thesis/gcp-storage-bucket-action@v3.1.0
        with:
          service-key: ${{ secrets.DOCS_KEEP_NETWORK_UPLOADER_SERVICE_KEY_JSON }}
          project: cfc-production
          bucket-name: docs.keep.network
          bucket-path: ./${{ github.head_ref }}
          build-folder: tmp/docs
    
  docs-solidity:
    runs-on: ubuntu-latest
    needs: docs-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.docs-detect-changes.outputs.path-filter == 'true'
    env:
      SOLIDITY_DOCS_DIR: ${{ github.workspace }}/docs/solidity-v1
    steps:
      - uses: actions/checkout@v2

      - name: Generate solidity docs
        working-directory: ./solidity-v1
        run: |
          npm ci
          npx truffle compile
          mkdir -p $SOLIDITY_DOCS_DIR
          node scripts/generate-api-docs.js > $SOLIDITY_DOCS_DIR/index.adoc

      - name: Upload Solidity Docs Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Solidity Docs
          path: ${{ env.SOLIDITY_DOCS_DIR }}/index.adoc

  docs-html:
    runs-on: ubuntu-latest
    needs: [docs-detect-changes, docs-solidity]
    if: | # `always()` returns true, even if job should be cancelled
      always()
        && (github.event_name != 'pull_request'
        || needs.docs-detect-changes.outputs.path-filter == 'true')
    steps:
      - uses: actions/checkout@v2

      - name: Download Solidity Docs Artifact
        uses: actions/download-artifact@v2
        continue-on-error: true
        with:
          name: Solidity Docs
          path: ${{ github.workspace }}/docs/solidity-v1

      - name: Build HTML docs
        id: html
        uses: thesis/asciidoctor-action@v1.0.1
        with:
          files: 'docs/*.adoc docs/**/*.adoc'
          args: '-a revdate=`date +%Y-%m-%d` --failure-level=ERROR'

      # A push event is a main merge; deploy to primary bucket.
      - if: github.event_name == 'push'
        name: Upload asciidocs
        uses: thesis/gcp-storage-bucket-action@v3.1.0
        with:
          service-key: ${{ secrets.DOCS_KEEP_NETWORK_UPLOADER_SERVICE_KEY_JSON }}
          project: cfc-production
          bucket-name: docs.keep.network
          bucket-path: .
          build-folder: ${{ steps.html.outputs.asciidoctor-artifacts }}/docs

      # A pull_request event is a PR; deploy to preview bucket.
      - if: github.event_name == 'pull_request'
        name: Upload asciidocs preview
        uses: thesis/gcp-storage-bucket-action@v3.1.0
        with:
          service-key: ${{ secrets.DOCS_KEEP_NETWORK_UPLOADER_SERVICE_KEY_JSON }}
          project: cfc-production
          bucket-name: docs.keep.network
          bucket-path: ./${{ github.head_ref }}
          build-folder: ${{ steps.html.outputs.asciidoctor-artifacts }}/docs

  docs-pdf:
    runs-on: ubuntu-latest
    needs: [docs-detect-changes, docs-solidity]
    if: | # `always()` returns true, even if job should be cancelled
      always()
        && (github.event_name != 'pull_request'
        || needs.docs-detect-changes.outputs.path-filter == 'true')
    steps:
      - uses: actions/checkout@v2

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        continue-on-error: true
        with:
          name: Solidity Docs
          path: ${{ github.workspace }}/docs/solidity-v1

      - name: Build PDF docs
        id: pdf
        uses: thesis/asciidoctor-action@v1.0.1
        with:
          files: 'docs/*.adoc docs/**/*.adoc'
          format: pdf
          args: '-a revdate=`date +%Y-%m-%d` --failure-level=ERROR'

      # A push event is a main merge; deploy to primary bucket.
      - if: github.event_name == 'push'
        name: Upload asciidocs
        uses: thesis/gcp-storage-bucket-action@v3.1.0
        with:
          service-key: ${{ secrets.DOCS_KEEP_NETWORK_UPLOADER_SERVICE_KEY_JSON }}
          project: cfc-production
          bucket-name: docs.keep.network
          bucket-path: .
          build-folder: ${{ steps.pdf.outputs.asciidoctor-artifacts }}/docs

      # A pull_request event is a PR; deploy to preview bucket.
      - if: github.event_name == 'pull_request'
        name: Upload asciidocs preview
        uses: thesis/gcp-storage-bucket-action@v3.1.0
        with:
          service-key: ${{ secrets.DOCS_KEEP_NETWORK_UPLOADER_SERVICE_KEY_JSON }}
          project: cfc-production
          bucket-name: docs.keep.network
          bucket-path: ./${{ github.head_ref }}
          build-folder: ${{ steps.pdf.outputs.asciidoctor-artifacts }}/docs