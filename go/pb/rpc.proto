syntax = "proto3";
package pb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "storeproto";
option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message BroadcastEnvelope {
	// This is the senders's HMAC Key. This is used to sign requests.
	string version = 1;

	// This is the senders's HMAC Key. This is used to sign requests.
	bytes key = 2;

	// This is the senders's HMAC Key. This is used to sign requests.
	MessageData messageData = ;

	// This is the senders's HMAC Key. This is used to sign requests.
	Sender sender = 2;

	// This is the senders's HMAC Key. This is used to sign requests.
	Receiver receiver = 2;

	// This is the senders's HMAC Key. This is used to sign requests.
	EncOpts enc = 3;

	message Sender {
		// The bls.ID of the sender.
		repeated bytes blsid = 1;

		// Libp2p identification of the sender.
		string p2pid = 2;
	}

	message Receiver {

	}

	message EncOpts {
		EncMode mode = 1;
		bytes nonce = 2;
		repeated bytes keyHashes = 3; // the hashes of the shared keys used (salted)

		enum EncMode {
			NONE = 0; // no encryption, anyone can read
			SHAREDKEY = 1; // messages are encrypted with shared key
			WOT = 2; // web of trust, certificates can allow publisher set to grow
		}
	}
}
